{"version":3,"sources":["components/Loading/loading.module.scss","components/WeatherCarousel/wcs.module.scss","containers/Home/style.module.scss","redux/core/actionTypes.js","redux/core/reducer.js","redux/rootReducer.js","redux/store.js","constants/api.js","constants/labels.js","constants/constant.js","lib/Api.js","lib/Util.js","redux/core/actions.js","components/Loading/index.js","components/WindowDimensions/index.js","components/Carousel/index.js","components/Text/index.js","components/Card/index.js","components/WeatherCarousel/index.js","components/WeatherChart/index.js","components/TempCheckBox/index.js","containers/Home/index.js","App.js","serviceWorker.js","index.js","components/Carousel/carousel.module.scss"],"names":["module","exports","actionTypes","initialState","weatherData","city","forecast","core","state","action","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","appStore","createStore","rootReducer","applyMiddleware","thunk","hostname","endpoints","key","url","method","networkError","timeOut","default","requestCounter","serialize","obj","prefix","str","Object","keys","forEach","p","k","v","push","encodeURIComponent","join","AppAPI","APIConfig","endpoint","params","body","inputEndpoint","inputParams","endpointKey","thirdParty","HOSTNAME","Promise","resolve","reject","a","apiTimedOut","setTimeout","Labels","timeoutAfter","console","log","toUpperCase","req","headers","Accept","mode","urlParams","param","includes","split","undefined","id","thisUrl","fetch","then","rawResponse","clearTimeout","status","JSON","parse","_bodyInit","jsonResponse","json","message","response","catch","error","code","fetcher","Util","getQueryString","parameter","myParameter","replace","results","RegExp","exec","decodeURIComponent","getTemperature","temp","degree","withDegree","res","toFixed","updateWeatherData","data","Loading","className","styles","container","loading","loadingLetter","getWindowDimensions","sWidth","innerWidth","sHeight","innerHeight","useStyles","makeStyles","theme","arrow","display","alignItems","justifyContent","borderRadius","cursor","transition","top","position","right","zIndex","color","nextArrow","backArrow","left","Carousel","props","classes","useState","currentIndex","setCurrentIndex","translateValue","setTranslateValue","itemCount","setItemCount","width","setWidth","slideRef","useRef","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","WindowDimensions","_setItemCount","size","newItemCount","current","offsetWidth","goToPrevSlide","slideWidth","goToNextSlide","children","length","document","querySelector","clientWidth","Slide","item","slide","style","LeftArrow","Fab","disabled","onClick","RightArrow","slider","ref","sliderWrapper","transform","map","i","Text","Typography","root","background","boxShadow","border","media","height","backgroundSize","filter","CardView","Card","CardActionArea","CardContent","gutterBottom","variant","component","moment","dt_txt","format","dailyAverage","tempType","CardMedia","image","weather","icon","title","main","description","align","WeatherCarousel","forecastDataByDateCard","setForecastDataByDateCard","forecastDataByDateChart","setForecastDataByDateChart","dailySum","setDailySum","dailySumTemp","forecastData","Array","Grid","spacing","tempSum","tempcount","chartData","colors","getPath","x","y","TriangleBar","fill","d","stroke","setData","row","margin","bottom","strokeDasharray","dataKey","shape","label","entry","index","TempCheckBox","setTemp","_chnageTemp","tempCallback","ButtonGroup","disableElevation","Button","Home","dispatch","useDispatch","cityData","useSelector","setChartData","loadingStatus","setLoadingStatus","_showLoading","_getWeatherData","q","APPID","Constant","cnt","getState","list","err","Container","direction","justify","e","App","store","Boolean","location","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f017eb94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loading_container__2Ncun\",\"loading\":\"loading_loading__1GRCx\",\"loadingLetter\":\"loading_loadingLetter__osaJm\",\"bounce\":\"loading_bounce__1f7-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide\":\"wcs_slide__ZFhdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__1xewk\"};","export const actionTypes = {\n    UPDATE_WEATHER_DATA: 'UPDATE_WEATHER_DATA',\n};\n","import { actionTypes } from './actionTypes';\n\nconst initialState = {\n    weatherData: {\n        city: {},\n        forecast: [],\n    },\n};\n\nexport default function core(state = initialState, action) {\n    switch (action.type) {\n        case actionTypes.UPDATE_WEATHER_DATA:\n            if (!action.payload) return state;\n\n            return {\n                ...state,\n                weatherData: {\n                    ...state.weatherData,\n                    ...action.payload,\n                },\n            };\n\n        default:\n            return { ...state };\n    }\n}\n","import core from './core/reducer'; //put any name\n\nexport default core;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const appStore = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\n","/**\n * API Config\n *\n * */\n\nexport default {\n    hostname: 'https://api.openweathermap.org',\n\n    endpoints: [{ key: 'forecast', url: '/data/2.5/forecast', method: 'GET' }],\n};\n","/**\n * App Labels\n *\n * */\n\nexport default {\n    error: {\n        networkError: 'Network Error',\n        timeOut: 'Timeout Error',\n        default: 'Unknown Error',\n    },\n};\n","export default {\n    openWeatherMapID: '75f972b80e26f14fe6c920aa6a85ad57',\n};\n","// Consts and Libs\nimport { Labels, APIConfig } from '../constants';\n\n// Config\n// const HOSTNAME = APIConfig.hostname;\nlet requestCounter = 0; // Number each API request (used for debugging)\n\n/**\n * Convert param object into query string\n * eg.\n *   {foo: 'hi there', bar: { blah: 123, quux: [1, 2, 3] }}\n *   foo=hi there&bar[blah]=123&bar[quux][0]=1&bar[quux][1]=2&bar[quux][2]=3\n */\nfunction serialize(obj, prefix) {\n    const str = [];\n\n    Object.keys(obj).forEach((p) => {\n        const k = prefix ? `${prefix}[${p}]` : p;\n        const v = obj[p];\n\n        str.push(v !== null && typeof v === 'object' ? serialize(v, k) : `${encodeURIComponent(k)}=${encodeURIComponent(v)}`);\n    });\n\n    return str.join('&');\n}\n\n/**\n * Sends requests to the API\n */\nfunction fetcher(method, inputEndpoint, inputParams, body, endpointKey, thirdParty = false) {\n    const HOSTNAME = thirdParty ? '' : APIConfig.hostname;\n\n    let endpoint = inputEndpoint;\n    const params = inputParams;\n\n    return new Promise(async (resolve, reject) => {\n        requestCounter += 1;\n        const requestNum = requestCounter;\n\n        // After x seconds, let's call it a day!\n        const timeoutAfter = 45;\n        const apiTimedOut = setTimeout(() => reject(Labels.error.timeOut), timeoutAfter * 1000);\n\n        if (!method || !endpoint) {\n            return reject('Missing params (API.fetcher).');\n        }\n\n        // Build request\n        console.log(method.toUpperCase());\n        const req = {\n            method: method.toUpperCase(),\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                mode: 'no-cors',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            },\n        };\n\n        // Add Endpoint Params\n        let urlParams = '';\n        if (params) {\n            // Object - eg. /recipes?title=this&cat=2\n            if (typeof params === 'object') {\n                // Replace matching params in API routes eg. /recipes/{param}/foo\n                Object.keys(params).forEach((param) => {\n                    if (endpoint.includes(`{${param}}`)) {\n                        endpoint = endpoint.split(`{${param}}`).join(params[param]);\n                        delete params[param];\n                    }\n                });\n\n                // Check if there's still an 'id' prop, /{id}?\n                if (params.id !== undefined) {\n                    if (typeof params.id === 'string' || typeof params.id === 'number') {\n                        urlParams = `/${params.id}`;\n                        delete params.id;\n                    }\n                }\n                // Add the rest of the params as a query string\n                urlParams = `?${serialize(params)}`;\n            } else if (typeof params === 'string' || typeof params === 'number') {\n                // String or Number - eg. /recipes/23\n                urlParams = `/${params}`;\n            } else {\n                // Something else? Just log an error\n                console.log('oooops');\n            }\n        }\n\n        // Add Body\n        if (body) {\n            req.body = body;\n        }\n\n        const thisUrl = HOSTNAME + endpoint + urlParams;\n\n        // Make the request\n        return (\n            fetch(thisUrl)\n                .then(async (rawResponse) => {\n                    // API got back to us, clear the timeout\n                    clearTimeout(apiTimedOut);\n\n                    /**skipping 401 as well to handle it inside app and show the message */\n                    if (!rawResponse || (rawResponse.status !== 200 && rawResponse.status !== 401)) {\n                        throw JSON.parse(rawResponse._bodyInit);\n                        // throw rawResponse ? rawResponse._bodyInit : { message: Labels.error.networkError };\n                    }\n\n                    let jsonResponse = {};\n                    try {\n                        jsonResponse = await rawResponse.json();\n                    } catch (error) {\n                        let err = '';\n                        if (!rawResponse.url.includes(HOSTNAME)) {\n                            err = { message: Labels.error.networkError };\n                        } else {\n                            err = { message: Labels.error.default };\n                        }\n                        throw err;\n                    }\n                    return jsonResponse;\n                })\n                .then((response) => {\n                    return resolve(response);\n                })\n                // when response status code is not 200\n                .catch(async (error, code) => {\n                    // API got back to us, clear the timeout\n                    clearTimeout(apiTimedOut);\n\n                    // if (error === 401) {\n                    // \treturn reject(error);\n                    // }\n\n                    // if (!error.message) {\n                    // \treturn reject(Labels.error.default);\n                    // }\n                    return reject(error);\n                })\n        );\n    });\n}\n\n/* Create the API Export ==================================================================== */\n/**\n * Build services from Endpoints\n * - So we can call AppAPI.recipes.get() for example\n */\nconst AppAPI = {\n    // getToken: Token.getToken,\n    // tokenIsValid: Token.tokenIsValid\n};\n\nAPIConfig.endpoints.forEach((endpoint) => {\n    AppAPI[endpoint.key] = (params, body) => fetcher(endpoint.method, endpoint.url, params, body, endpoint.key, endpoint.thirdParty);\n});\n\n/* Export ==================================================================== */\nexport default AppAPI;\n","/* *\n * Global Util Functions\n\n * */\n\nconst Util = {\n    getQueryString: (url, parameter) => {\n        const myParameter = parameter.replace(/[\\[\\]]/g, '\\\\$&');\n        const regex = new RegExp(`[?&]${myParameter}(=([^&#]*)|&|#|$)`);\n        const results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n    },\n\n    getTemperature: (temp, degree, withDegree = true) => {\n        let res = 0;\n        if (degree === 'F') {\n            res = ((temp - 273.15) * 9) / 5 + 32;\n            res = res.toFixed(2);\n            res = withDegree ? `${res} \\u00b0F` : res;\n        } else if (degree === 'C') {\n            res = temp - 273.15;\n            res = res.toFixed(2);\n            res = withDegree ? `${res} \\u00b0C` : res;\n        }\n        return res;\n    },\n};\n\n/* Export ================================ */\nexport default Util;\n","import { actionTypes } from './actionTypes';\nimport { AppAPI } from '../../lib';\n\nexport const updateWeatherData = (data) => {\n    return {\n        type: actionTypes.UPDATE_WEATHER_DATA,\n        payload: data,\n    };\n};\n\nexport const weatherAction = (data) => {\n    return (dispatch, getState) =>\n        new Promise(async (resolve, reject) => {\n            AppAPI.forecast(data)\n                .then((res) => {\n                    const data = {\n                        city: res.city,\n                        forecast: res.list,\n                    };\n                    dispatch(updateWeatherData(data));\n                    return resolve(res);\n                })\n                .catch((err) => {\n                    return reject(err);\n                });\n        });\n};\n","import React from 'react';\n\nimport styles from './loading.module.scss';\n\nexport default function Loading() {\n    return (\n        <div className={styles.container}>\n            <div className={styles.loading}>\n                <div className={styles.loadingLetter}>L</div>\n                <div className={styles.loadingLetter}>o</div>\n                <div className={styles.loadingLetter}>a</div>\n                <div className={styles.loadingLetter}>d</div>\n                <div className={styles.loadingLetter}>i</div>\n                <div className={styles.loadingLetter}>n</div>\n                <div className={styles.loadingLetter}>g</div>\n                <div className={styles.loadingLetter}>.</div>\n                <div className={styles.loadingLetter}>.</div>\n                <div className={styles.loadingLetter}>.</div>\n            </div>\n        </div>\n    );\n}\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: sWidth, innerHeight: sHeight } = window;\n    return {\n        sWidth,\n        sHeight,\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\n// import ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport styles from './carousel.module.scss';\nimport WindowDimensions from '../WindowDimensions';\n\nconst useStyles = makeStyles((theme) => ({\n    arrow: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: '50%',\n        cursor: 'pointer',\n        transition: 'transform ease-in .1s',\n        top: '45%',\n        position: 'absolute',\n        right: '25px',\n        zIndex: '999',\n        color: '#fff',\n    },\n    nextArrow: {\n        right: '25px',\n    },\n    backArrow: {\n        left: '25px',\n    },\n}));\n\nexport default function Carousel(props) {\n    const classes = useStyles();\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [translateValue, setTranslateValue] = useState(0);\n    const [itemCount, setItemCount] = useState(3);\n    const [width, setWidth] = useState(null);\n    const slideRef = useRef();\n    const { sHeight, sWidth } = WindowDimensions();\n\n    const _setItemCount = (size) => {\n        if (size > 640) {\n            return 3;\n        } else if (size > 420) {\n            return 2;\n        } else {\n            return 1;\n        }\n    };\n\n    useEffect(() => {\n        setItemCount(_setItemCount(sWidth));\n\n        const handleResize = () => {\n            const newItemCount = _setItemCount(window.innerWidth);\n            setItemCount(newItemCount);\n\n            setWidth(slideRef.current.offsetWidth);\n            setTranslateValue(-(currentIndex * (slideRef.current.offsetWidth / newItemCount)));\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [slideRef, currentIndex]);\n\n    const goToPrevSlide = () => {\n        if (currentIndex === 0) return;\n\n        setCurrentIndex(currentIndex - 1);\n        setTranslateValue(translateValue + slideWidth());\n    };\n\n    const goToNextSlide = () => {\n        if (currentIndex === props.children.length - itemCount) {\n            return;\n        }\n\n        setCurrentIndex(currentIndex + 1);\n        setTranslateValue(translateValue - slideWidth());\n    };\n\n    const slideWidth = () => {\n        return width / itemCount || document.querySelector('#slideWidth').clientWidth / itemCount;\n    };\n\n    const Slide = ({ item }) => {\n        return (\n            <div className={styles.slide} style={{ width: `calc(100% / ${itemCount})` }}>\n                {item}\n            </div>\n        );\n    };\n\n    const LeftArrow = () => {\n        return (\n            <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                disabled={currentIndex === 0 ? true : false}\n                className={[classes.arrow, classes.backArrow].join(' ')}\n                onClick={goToPrevSlide}\n            >\n                <i className=\"material-icons\">arrow_back</i>\n            </Fab>\n        );\n    };\n\n    const RightArrow = () => {\n        return (\n            <Fab\n                size=\"medium\"\n                color=\"secondary\"\n                disabled={currentIndex === props.children.length - itemCount ? true : false}\n                className={[classes.arrow, classes.nextArrow].join(' ')}\n                onClick={goToNextSlide}\n            >\n                <i className=\"material-icons\">arrow_forward</i>\n            </Fab>\n        );\n    };\n\n    return (\n        <div className={styles.slider} id=\"slideWidth\" ref={slideRef}>\n            <div\n                className={styles.sliderWrapper}\n                style={{\n                    transform: `translateX(${translateValue}px)`,\n                    transition: 'transform ease-out 0.30s',\n                }}\n            >\n                {props.children.map((item, i) => (\n                    <Slide key={i} item={item} />\n                ))}\n            </div>\n\n            <LeftArrow goToPrevSlide={goToPrevSlide} />\n\n            <RightArrow goToNextSlide={goToNextSlide} />\n        </div>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styles from './text.module.scss';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function Text(props) {\n    const classes = useStyles();\n\n    return <Typography {...props} />;\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport moment from 'moment';\n\nimport Text from '../Text';\nimport styles from './card.module.scss';\nimport { Util } from '../../lib';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        background: '#64B5F6',\n        boxShadow: '#BBDEFB',\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n    },\n    media: {\n        height: 160,\n        backgroundSize: 'auto',\n        filter: 'brightness(0) invert(1)',\n    },\n}));\n\nexport default function CardView(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root} onClick={props.onClick}>\n            <CardActionArea>\n                <CardContent>\n                    <Text gutterBottom variant=\"h5\" component=\"h2\">\n                        {moment(props.data.dt_txt).format('dddd')} <Text component=\"span\">{moment(props.data.dt_txt).format('ll')}</Text>\n                    </Text>\n                    <Text gutterBottom variant=\"h5\" component=\"h2\">\n                        Average temp: {Util.getTemperature(props.dailyAverage, props.tempType)}\n                    </Text>\n                    <CardMedia\n                        className={classes.media}\n                        image={`https://openweathermap.org/img/wn/${props.data.weather[0].icon}@4x.png`}\n                        title=\"Contemplative Reptile\"\n                    />\n                    <Text gutterBottom variant=\"h5\" component=\"h2\">\n                        {moment(props.data.dt_txt).format('h:mm')} <Text component=\"span\">{moment(props.data.dt_txt).format('a')}</Text>\n                    </Text>\n                    <Text gutterBottom variant=\"h5\" component=\"h2\">\n                        {Util.getTemperature(props.data.main.temp, props.tempType)}\n                    </Text>\n                    <Text gutterBottom variant=\"h5\" component=\"h2\">\n                        {props.data.weather[0].description}\n                    </Text>\n                    <Text variant=\"body2\" component=\"p\" align=\"right\">\n                        More Details\n                    </Text>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport moment from 'moment';\n\nimport Carousel from '../Carousel';\nimport Card from '../Card';\n\nimport styles from './wcs.module.scss';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //   flexGrow: 1,\n    },\n}));\n\nexport default function WeatherCarousel(props) {\n    const classes = useStyles();\n    const [forecastDataByDateCard, setForecastDataByDateCard] = useState([]);\n    const [forecastDataByDateChart, setForecastDataByDateChart] = useState({});\n    const [dailySum, setDailySum] = useState({});\n\n    useEffect(() => {\n        let forecastDataByDateChart = {};\n        let forecastDataByDateCard = [];\n        let dailySumTemp = {};\n        let dailySum = [];\n        props.forecastData.map((item) => {\n            const key = moment(item.dt_txt).format('DD-MM-YYYY');\n            if (!forecastDataByDateChart[key]) {\n                dailySumTemp['tempSum'] = item.main.temp;\n                dailySumTemp['tempcount'] = 1;\n                dailySum[key] = dailySumTemp;\n                dailySumTemp = {};\n                forecastDataByDateChart[key] = Array(item);\n                forecastDataByDateCard.push(item);\n            } else {\n                dailySum[key]['tempSum'] += item.main.temp;\n                dailySum[key]['tempcount'] += 1;\n                forecastDataByDateChart[key].push(item);\n            }\n        });\n        setForecastDataByDateCard(forecastDataByDateCard);\n        setForecastDataByDateChart(forecastDataByDateChart);\n        setDailySum(dailySum);\n    }, [props]);\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={4}>\n                <Carousel>\n                    {forecastDataByDateCard.map((item, i) => (\n                        <div key={i} className={styles.slide}>\n                            <Card\n                                data={item}\n                                tempType={props.tempType}\n                                dailyAverage={\n                                    dailySum[moment(item.dt_txt).format('DD-MM-YYYY')].tempSum /\n                                    dailySum[moment(item.dt_txt).format('DD-MM-YYYY')].tempcount\n                                }\n                                onClick={() => props.chartData(forecastDataByDateChart[moment(item.dt_txt).format('DD-MM-YYYY')])}\n                            />\n                        </div>\n                    ))}\n                </Carousel>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nimport styles from './weatherChart.module.scss';\nimport { Util } from '../../lib';\n\nconst colors = ['#64B5F6', '#FFB74D', '#81C784', '#FF8A65', '#9575CD', '#A1887F', '#F06292', '#90A4AE', '#DCE775', '#4DB6AC'];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n            C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n            C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${x + width}, ${y + height}\n            Z`;\n\nconst TriangleBar = (props) => {\n    const { fill, x, y, width, height } = props;\n\n    return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nexport default function WeatherCarousel(props) {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        let data = [];\n        setData([]);\n        props.chartData.map((item) => {\n            let row = [];\n            row['name'] = `${moment(item.dt_txt).format('h:mm')} ${moment(item.dt_txt).format('a')}`;\n            row['temp'] = Util.getTemperature(item.main.temp, props.tempType, false);\n            data.push(row);\n        });\n        setTimeout(() => {\n            setData(data);\n        }, 10);\n    }, [props]);\n\n    return (\n        <div style={{ width: '100%', height: 350 }}>\n            <ResponsiveContainer>\n                <BarChart\n                    data={data}\n                    margin={{\n                        top: 50,\n                        right: 20,\n                        left: 20,\n                        bottom: 10,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    {/* <YAxis /> */}\n                    <Tooltip />\n                    <Bar dataKey=\"temp\" fill=\"#9575CD\" shape={<TriangleBar />} label={{ position: 'top' }}>\n                        {data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n                        ))}\n                    </Bar>\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport styles from './tcb.module.scss';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nexport default function TempCheckBox(props) {\n    const classes = useStyles();\n    const [temp, setTemp] = useState(props.tempType || 'F');\n\n    const _chnageTemp = (temp) => {\n        setTemp(temp);\n        props.tempCallback(temp);\n    };\n\n    return (\n        <ButtonGroup disableElevation size=\"large\" color=\"secondary\">\n            <Button variant={temp === 'C' ? 'contained' : 'outlined'} onClick={() => _chnageTemp('C')}>\n                Celsius\n            </Button>\n            <Button variant={temp === 'F' ? 'contained' : 'outlined'} onClick={() => _chnageTemp('F')}>\n                Fahrenheit\n            </Button>\n        </ButtonGroup>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\n\nimport { weatherAction } from '../../redux/core/actions';\nimport Loading from '../../components/Loading';\nimport WeatherCarousel from '../../components/WeatherCarousel';\nimport WeatherChart from '../../components/WeatherChart';\nimport TempCheckBox from '../../components/TempCheckBox';\nimport { Constant } from '../../constants';\n\nimport styles from './style.module.scss';\n\nexport default function Home() {\n    const dispatch = useDispatch();\n    const cityData = useSelector((state) => state.weatherData.city);\n    const forecastData = useSelector((state) => state.weatherData.forecast);\n    const [chartData, setChartData] = useState([]);\n    const [temp, setTemp] = useState('F');\n    const [loadingStatus, setLoadingStatus] = useState(true);\n\n    useEffect(() => {\n        _showLoading();\n        _getWeatherData();\n    }, []);\n\n    const _getWeatherData = () => {\n        const reqPayload = {\n            q: 'Munich,de',\n            APPID: Constant.openWeatherMapID,\n            cnt: 40,\n        };\n        dispatch(weatherAction(reqPayload))\n            .then((res) => {\n                console.log(res);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const _showLoading = () => {\n        setTimeout(() => {\n            setLoadingStatus(false);\n        }, 1500);\n    };\n\n    return (\n        <div className={styles.main}>\n            {forecastData.length > 0 && !loadingStatus ? (\n                <Container>\n                    <br />\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                        <TempCheckBox tempType={temp} tempCallback={(e) => setTemp(e)} />\n                    </Grid>\n                    <br />\n                    <WeatherCarousel cityData={cityData} forecastData={forecastData} chartData={(e) => setChartData(e)} tempType={temp} />\n                    {chartData.length > 0 && <WeatherChart chartData={chartData} tempType={temp} />}\n                </Container>\n            ) : (\n                <Loading />\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { appStore } from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport Home from './containers/Home';\n\nfunction App() {\n    return (\n        <Provider store={appStore}>\n            <Home />\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"carousel_slider__EuiE4\",\"sliderWrapper\":\"carousel_sliderWrapper__1V_Xh\",\"slide\":\"carousel_slide__3fFtU\",\"arrow\":\"carousel_arrow__2jGRo\",\"nextArrow\":\"carousel_nextArrow__254zW\",\"backArrow\":\"carousel_backArrow__2YfX4\",\"fa-arrow-right\":\"carousel_fa-arrow-right__1iajr\",\"fa-arrow-left\":\"carousel_fa-arrow-left__322mR\"};"],"sourceRoot":""}